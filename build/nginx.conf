user                            docker;
worker_processes                auto;
daemon                          off;
pid                             /usr/src/run/nginx.pid;

error_log                       /var/log/nginx/error.log warn;

events {
  worker_connections          1024;
}

http {

  upstream ext_server {
    server ext-server:8001;
  }

  upstream puma_web_app {
    server web-app:3001;
  }

  upstream puma_ruby_server {
    server ruby-server:3000;
  }

  include                     /etc/nginx/mime.types;
  default_type                application/octet-stream;
  sendfile                    on;
  log_format combined_json escape=json '{ '
    '"amzn_trace_id": "$http_x_amzn_trace_id", '
      '"body_bytes_sent": "$body_bytes_sent", '
      '"http_referrer": "$http_referer", '
      '"http_user_agent": "$http_user_agent", '
      '"remote_addr": "$remote_addr", '
      '"remote_user": "$remote_user", '
      '"request": "$request", '
      '"path": "$request_uri", '
      '"request_context_id": "$http_x_request_context_id", '
      '"request_hostname": "$host", '
      '"request_id": "$request_id", '
      '"request_time": "$request_time", '
      '"status": "$status", '
      '"time_local": "$time_local" '
      '}';
    access_log                  /var/log/nginx/access.log combined_json;
    keepalive_timeout           3000;
    server_tokens               off;
    client_body_timeout         65;
    client_header_timeout       65;

    server {

      listen 80;

      client_max_body_size 4G;
      keepalive_timeout 10;

      server_name             extensions.docker ext_server;
      root                    /usr/src/app;

      location / {
        try_files $uri @ext_server;
      }

      location @ext_server {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://ext_server;
      }

      location ~ \.(php|html)$ {
        return 405;
      }

      location ~ /\.git {
        deny all;
      }
    }

    server {

      listen 80;

      client_max_body_size 4G;
      keepalive_timeout 10;

      error_page 500 502 504 /500.html;
      error_page 503 @503;

      server_name             standardnotes.docker puma_web_app;
      root                    /usr/src/app/public;

      location / {
        try_files $uri/index.html $uri @puma_web_app;
      }

      location @puma_web_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://puma_web_app;
        # limit_req zone=one;
      }

      #location ^~ /assets/ {
        #gzip_static on;
        #expires max;
        #add_header Cache-Control public;
        #}

      location = /50x.html {
        root html;
      }

      location = /404.html {
        root html;
      }

      location @503 {
        error_page 405 = /system/maintenance.html;
        if (-f $document_root/system/maintenance.html) {
          rewrite ^(.*)$ /system/maintenance.html break;
        }
        rewrite ^(.*)$ /503.html break;
      }

      if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
        return 405;
      }

      if (-f $document_root/system/maintenance.html) {
        return 503;
      }

      location ~ \.(php|html)$ {
        return 405;
      }

      location ~ /\.git {
        deny all;
      }
    }

    server {

      listen 80;

      client_max_body_size 4G;
      keepalive_timeout 10;

      error_page 500 502 504 /500.html;
      error_page 503 @503;

      server_name             standardfile.docker puma_ruby_server;
      root                    /usr/src/app/public;

      location / {
        try_files $uri/index.html $uri @puma_ruby_server;
      }

      location @puma_ruby_server {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass http://puma_ruby_server;
      }

      location ^~ /assets/ {
        gzip_static on;
        expires max;
        add_header Cache-Control public;
      }

      location = /50x.html {
        root html;
      }

      location = /404.html {
        root html;
      }

      location @503 {
        error_page 405 = /system/maintenance.html;
        if (-f $document_root/system/maintenance.html) {
          rewrite ^(.*)$ /system/maintenance.html break;
        }
        rewrite ^(.*)$ /503.html break;
      }

      if ($request_method !~ ^(GET|HEAD|PUT|PATCH|POST|DELETE|OPTIONS)$ ){
        return 405;
      }

      if (-f $document_root/system/maintenance.html) {
        return 503;
      }

      location ~ \.(php|html)$ {
        return 405;
      }

      location ~ /\.git {
        deny all;
      }
    }
  }
